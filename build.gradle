plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'br.com.exactaworks'
version = '1.0.0'
sourceCompatibility = '11'

//encoding
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	mapStructVersion = '1.4.2.Final'
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation "org.mapstruct:mapstruct:${mapStructVersion}"
	implementation 'org.projectlombok:lombok'
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'juinit-vintage-engine'
	}
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.mockito:mockito-core:3.8.0'
	testImplementation 'org.hamcrest:hamcrest-library:2.2'
	testImplementation 'com.github.javafaker:javafaker:1.0.2'
	testImplementation 'org.projectlombok:lombok'
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		html.enabled = true
		xml.enabled = true
	}
}

